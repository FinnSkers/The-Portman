[tool.poetry]
name = "portman-backend"
version = "3.0.0"
description = "Modern AI-powered CV parsing and portfolio generation platform"
authors = ["PORTMAN Team"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = {extras = ["standard"], version = "^0.115.12"}
uvicorn = {extras = ["standard"], version = "^0.32.1"}
pydantic = "^2.10.4"
pydantic-settings = "^2.6.1"
sqlalchemy = "^2.0.36"
alembic = "^1.14.0"
asyncpg = "^0.30.0"
redis = "^5.2.1"
fastapi-users = {extras = ["sqlalchemy"], version = "^13.0.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
instructor = "^1.7.2"
openai = "^1.58.1"
anthropic = "^0.40.0"
sentence-transformers = "^3.3.1"
chromadb = "^0.5.25"
celery = {extras = ["redis"], version = "^5.4.0"}
httpx = "^0.28.1"
aiofiles = "^24.1.0"
structlog = "^24.4.0"
sentry-sdk = {extras = ["fastapi"], version = "^2.19.2"}
prometheus-fastapi-instrumentator = "^7.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.4"
pytest-asyncio = "^0.24.0"
pytest-cov = "^6.0.0"
black = "^24.10.0"
ruff = "^0.8.4"
pre-commit = "^4.0.1"
factory-boy = "^3.3.1"
faker = "^33.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
